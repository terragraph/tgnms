name: CI

on:
  push:
    branches:
    - main
    - 'releases/**'
  pull_request:
    branches:
    - main
    - 'releases/**'
  schedule:
    - cron: "0 * * * *"

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.8.12]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Switch to Current Branch
        run: git checkout ${{ env.BRANCH }}
              
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd jenkins_scripts
          pip install -r requirements.txt
      - name: Set environment variables
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: MSA Tglib main
        if: github.ref == 'refs/heads/main'
        run: |
          python jenkins_scripts/registry.py build tglib --branch "$GIT_BRANCH" --dir tglib --stage builder --username ${{ github.actor }}
      - name: MSA Tglib Release
        if: github.ref == 'refs/heads/releases'
        run: |
          python jenkins_scripts/registry.py build tglib --branch "$GIT_BRANCH" --dir tglib --username ${{ github.actor }}
          python jenkins_scripts/registry.py push tglib --username ${{ github.actor }}
      - name: scan
        run: |
          echo "GIT_SHA=${GIT_SHA}"
          echo "GIT_BRANCH=${GIT_BRANCH}"
          python jenkins_scripts/registry.py build scan_service --branch ${GIT_BRANCH} --dir scan_service
          python jenkins_scripts/registry.py push scan_service
      - name: C++ backends Main
        if: github.ref == 'refs/heads/main'
        run: |
          python jenkins_scripts/registry.py build cpp_backends --branch ${GIT_BRANCH} --dir docker --stage builder
      - name: C++ backends release
        if: github.ref == 'refs/heads/releases'
        run: |
          python jenkins_scripts/registry.py build cpp_backends --branch ${GIT_BRANCH} --dir docker
          python jenkins_scripts/registry.py push cpp_backends
      - name: Network Health Service
        run: |
          python jenkins_scripts/registry.py build network_health_service --branch ${GIT_BRANCH} --dir network_health_service
          python jenkins_scripts/registry.py push network_health_service
      - name: MSA Analytics
        run: |
          python jenkins_scripts/registry.py build analytics --branch ${GIT_BRANCH} --dir analytics
          python jenkins_scripts/registry.py push analytics
      - name: MSA Network Test
        run: |
          python jenkins_scripts/registry.py build network_test --branch "$GIT_BRANCH" --dir network_test
          python jenkins_scripts/registry.py push network_test
      - name: MSA Default Router Service
        run: |
          python jenkins_scripts/registry.py build default_routes_service --branch "$GIT_BRANCH" --dir default_routes_service
          python jenkins_scripts/registry.py push default_routes_service
      - name: MSA Weather Service
        run: |
          python jenkins_scripts/registry.py build weather_service --branch "$GIT_BRANCH" --dir weather_service
          python jenkins_scripts/registry.py push weather_service
      - name: MSA Crash Log Service
        run: |
          python jenkins_scripts/registry.py build crashlog_analysis_service --branch "$GIT_BRANCH" --dir crashlog_analysis_service
          python jenkins_scripts/registry.py push crashlog_analysis_service
      - name: MSA Topology Service
        run: |
          python jenkins_scripts/registry.py build topology_service --branch "$GIT_BRANCH" --dir topology_service
          python jenkins_scripts/registry.py push topology_service
