name: CI

on:
  push:
    branches:
    - main
    - 'releases/**'
  pull_request:
    branches:
    - main
    - 'releases/**'

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.8.12]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
          
      - name: Switch to Current Branch
        run: git checkout ${{ env.BRANCH }}
              
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd jenkins_scripts
          pip install -r requirements.txt
      - name: Set environment variables
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: scan
        if: github.ref == 'refs/heads/releases'
        run: |
          echo "GIT_SHA=${GIT_SHA}"
          echo "GIT_BRANCH=${GIT_BRANCH}"
          python jenkins_scripts/registry.py build scan_service --branch ${GIT_BRANCH} --dir scan_service
          #python jenkins_scripts/registry.py push scan_service --username "$DOCKER_USER"
      - name: C++ backends
        if: github.ref == 'refs/heads/releases'
        run: |
          python jenkins_scripts/registry.py build cpp_backends --branch ${GIT_BRANCH}" --dir docker --stage builder
          python jenkins_scripts/registry.py build cpp_backends --branch ${GIT_BRANCH}" --dir docker
          #python jenkins_scripts/registry.py push cpp_backends --username ${{ env.DOCKER_USER }}
      - name: Network Health Service
        run: |
          python jenkins_scripts/registry.py build network_health_service --branch ${GIT_BRANCH}" --dir network_health_service
          #python jenkins_scripts/registry.py push network_health_service --username "$DOCKER_USER"
