/**
 * Copyright (c) 2014-present, Facebook, Inc.
 */
// @flow strict-local

// Generated by thrift2flow at Thu Feb 21 2019 13:01:24 GMT-0800 (PST)
/* eslint-disable */

import * as Topology from './Topology';

export type KeyUnitType = 'NONE' | 'PERC' | 'BYTES_PER_SEC';
export const KeyUnitValueMap = {
  NONE: 0,
  PERC: 1,
  BYTES_PER_SEC: 2,
};

export type RestrictorTypeType = 'NODE' | 'LINK';
export const RestrictorTypeValueMap = {
  NODE: 1,
  LINK: 2,
};

export type TypeaheadTypeType = 'KEYNAME' | 'NODENAME' | 'TOPOLOGYNAME';
export const TypeaheadTypeValueMap = {
  KEYNAME: 1,
  NODENAME: 3,
  TOPOLOGYNAME: 4,
};

export type QueryRestrictorType = {|
  restrictorType: RestrictorTypeType,
  values: string[],
|};

export type TypeaheadRequestType = {|
  topologyName?: string,
  searchTerm?: string,
  typeaheadType: TypeaheadTypeType,
  restrictors: QueryRestrictorType[],
  debugLogToConsole?: boolean,
|};

export type LinkDirectionType = 'LINK_A' | 'LINK_Z';
export const LinkDirectionValueMap = {
  LINK_A: 1,
  LINK_Z: 2,
};

export type KeyMetaDataType = {|
  keyId: Buffer,
  keyName: string,
  shortName?: string,
  srcNodeMac: string,
  srcNodeName: string,
  peerNodeMac?: string,
  linkName?: string,
  linkDirection?: LinkDirectionType,
  unit: KeyUnitType,
|};

export type TypeaheadResponseType = {|
  results: {[string]: KeyMetaDataType[]},
|};

export type StatsOutputFormatType =
  | 'POINTS'
  | 'TABLE'
  | 'RAW'
  | 'RAW_LINK'
  | 'RAW_NODE'
  | 'EVENT_LINK'
  | 'EVENT_NODE';
export const StatsOutputFormatValueMap = {
  POINTS: 1,
  TABLE: 2,
  RAW: 3,
  RAW_LINK: 4,
  RAW_NODE: 5,
  EVENT_LINK: 10,
  EVENT_NODE: 11,
};

export type GraphAggregationType =
  | 'NONE'
  | 'LATEST'
  | 'AVG'
  | 'COUNT'
  | 'SUM'
  | 'TOP_AVG'
  | 'TOP_MIN'
  | 'TOP_MAX'
  | 'BOTTOM_AVG'
  | 'BOTTOM_MIN'
  | 'BOTTOM_MAX'
  | 'LINK_STATS';
export const GraphAggregationValueMap = {
  NONE: 1,
  LATEST: 2,
  AVG: 10,
  COUNT: 15,
  SUM: 20,
  TOP_AVG: 30,
  TOP_MIN: 31,
  TOP_MAX: 32,
  BOTTOM_AVG: 40,
  BOTTOM_MIN: 41,
  BOTTOM_MAX: 42,
  LINK_STATS: 100,
};

export type QueryRequestType = {|
  topologyName: string,
  keyNames: string[],
  aggregation: GraphAggregationType,
  maxResults?: number,
  maxDataPoints?: number,
  restrictors?: QueryRestrictorType[],
  outputFormat: StatsOutputFormatType,
  countPerSecond?: number,
  minAgo?: number,
  startTsSec?: Buffer,
  endTsSec?: Buffer,
  dsIntervalSec: number,
  debugLogToConsole?: boolean,
|};

export const LINK_STATE = {
  LINK_DOWN_OR_NOT_AVAIL: 0,
  LINK_UP: 1,
  LINK_UP_DATADOWN: 2,
  LINK_UP_AVAIL_UNKNOWN: 3,
};

export type EventDescriptionType = {|
  startTime: Buffer,
  endTime: Buffer,
  description: string,
|};

export type EventListType = {|alive: number, events: EventDescriptionType[]|};

export type OutputFormatEventsType = {|
  startTime: Buffer,
  endTime: Buffer,
  events: {[string]: EventListType},
|};
